$module-types: 'components', 'functions', 'mixins', 'themes' !default;
$modules: ((), (), (), ()) !default;
$loading: () !default;

@function loaded-modules() {
	$str: 'Spysass Loaded Modules';
	$nl: '
';
	$title-pre: $nl + ' > ';
	$module-pre: $nl + '    > ';
	@for $t from 1 through length($module-types) {
		$list: nth($modules, $t);
		@if length($list) > 0 {
			$tmp: nth($module-types, $t);
			$str: $str + $title-pre + nth($module-types, $t);
			@for $l from 1 through length($list) {
				$str: $str + $module-pre + nth($list, $l);
			}
		}
	}
	@return $str;
}

@function load-module($name, $type) {
	$type-index: index($module-types, $type);
	$list: nth($modules, $type-index);
	@if length($list) > 0 and index($list, $name) {
		@warn 'Module already loaded: "' + $name + '" (' + $type + ')';
		@return false;
	} @else {
		$tmp: ($name $type-index);
		$loading: append($loading, $tmp);
		@return true;
	}
}

//@function finish-loading($name: $module-name, $type: $module-type) {
@function register-module() {
	$t: nth($loading, length($loading));
	$name: nth($t, 1);
	$type-index: nth($t, 2);
	$list: append(nth($modules, $type-index), $name, 'space');

	// Remove last item from $loading list
	$length: length($loading);
	$result: ();
	//@warn "before remove last $loading";
	//@warn $length;
	@for $i from 1 through $length {
		@if $i != $length {
			$result: append($result, nth($loading, $i));
		}
	}
	$loading: $result;


	//@warn "before rebuild $modules";
	// Rebuild $modules list
	$result: ();
	@for $i from 1 through length($modules) {
		@if $i == $type-index {
			$result: append($result, $list);
		} @else {
			$result: append($result, nth($modules, $i));
		}
	}
	$modules: $result;
	@return true;
}
