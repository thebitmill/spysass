// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@import '../../mixins/buttons';
@import '../../mixins/styles';

//
// @variables
//

// We use these to style the labels in different ways
$form-label-pointer: pointer !default;
$form-label-font-size: 1rem !default;
$form-label-font-weight: normal !default;
$form-label-line-height: 1.5 !default;
$form-label-font-color: scale-color(#000, $lightness: 30%) !default;
$form-label-small-transform: capitalize !default;
$form-label-bottom-margin: 0 !default;
$input-font-family: inherit !default;
$input-font-color: rgba(0,0,0,0.75) !default;
$input-font-size: 1rem !default;
$input-bg-color: #fff !default;
$input-focus-bg-color: scale-color(#fff, $lightness: -2%) !default;
$input-border-color: scale-color(#fff, $lightness: -20%) !default;
$input-focus-border-color: scale-color(#fff, $lightness: -40%) !default;
$input-border-style: solid !default;
$input-border-width: rem(1px) !default;
$input-border-radius: 0 !default;
$input-disabled-bg: #ddd !default;
$input-box-shadow: inset 0 1px 2px rgba(0,0,0,0.1) !default;
$input-include-glowing-effect: true !default;

$form-spacing: $column-gutter / 2 !default;

// We use these to style the fieldset border and spacing.
$fieldset-border-style: solid !default;
$fieldset-border-width: rem(1px) !default;
$fieldset-border-color: #ddd !default;
$fieldset-padding: $column-gutter / 2 !default;
$fieldset-margin: ($column-gutter / 2) 0 !default;

// We use these to style the legends when you use them
$legend-bg: #fff !default;
$legend-font-weight: bold !default;
$legend-padding: 0 rem(3) !default;

// We use these to style the prefix and postfix input elements
$input-prefix-bg: scale-color(#fff, $lightness: -5%) !default;
$input-prefix-border-color: scale-color(#fff, $lightness: -20%) !default;
$input-prefix-border-size: 1px !default;
$input-prefix-border-type: solid !default;
$input-prefix-overflow: hidden !default;
$input-prefix-font-color: #333 !default;
$input-prefix-font-color-alt: #fff !default;

// We use these to style the error states for inputs and labels
$input-error-message-padding: rem(6px 9px 9px) !default;
$input-error-message-top: rem(-1px) !default;
$input-error-message-font-size: 1rem !default;
$input-error-message-font-weight: normal !default;
$input-error-message-font-style: italic !default;
$input-error-message-font-color: #fff !default;
$input-error-message-font-color-alt: #333 !default;

// We use this to style the glowing effect of inputs when focused
$glowing-effect-fade-time: 0.45s !default;
$glowing-effect-color: $input-focus-border-color !default;

// Select variables
$select-bg-color: #fafafa !default;
$select-hover-bg-color: scale-color($select-bg-color, $lightness: -3%) !default;



// We use this mixin to style fieldsets

// @MIXIN
//
// We use this mixin to control border and background color of error inputs
// $color - Default: $alert-color (found in settings file)
@mixin form-error-color($color:$color-error) {
	border-color: $color;
	background-color: rgba($color, 0.1);

	// Go back to normal on focus
	&:focus {
		background: $input-focus-bg-color;
		border-color: $input-focus-border-color;
	}
}

// @MIXIN
//
// We use this simple mixin to style labels for error inputs
// $color - Default:$alert-color. Found in settings file
@mixin form-label-error-color($color:$color-error) { color: $color; }

// @MIXIN
//
// We use this mixin to create error message styles
// $bg - Default: $alert-color (Found in settings file)
@mixin form-error-message($bg:$color-error) {
	display: block;
	padding: rem($input-error-message-padding);
	margin-top: $input-error-message-top;
	margin-bottom: rem($form-spacing);
	font-size: rem($input-error-message-font-size);
	font-weight: $input-error-message-font-weight;
	font-style: $input-error-message-font-style;

	// We can control the text color based on the brightness of the background.
	$bg-lightness: lightness($bg);
	background: $bg;
	@if $bg-lightness < 70% or $bg == yellow { color: $input-error-message-font-color; }
	@else { color: $input-error-message-font-color-alt; }
}


/* Standard Forms */
form { margin: rem(0 0 $form-spacing); }

form p {
	font-size: rem($form-label-font-size);
}

/* Using forms within rows, we need to set some defaults */
form .row {
	.row {
		margin: 0 ((-$form-spacing) / 2);

		.col { padding: 0 $form-spacing / 2; }

		// Use this to collapse the margins of a form row
		&.collapse {
			margin: 0;

			.column,
			.columns { padding: 0; }
			input {
				@if $opposite-direction == left {
					@include border-left-radius(0);
				} @else {
					@include border-right-radius(0);
				}
			}
		}
	}
	input.col,
	textarea.col { padding-#{$default-float}: $form-spacing / 2; }
}


/* Label Styles */
label {
	font-size: rem($form-label-font-size);
	color: $form-label-font-color;
	cursor: $form-label-pointer;
	display: block;
	font-weight: $form-label-font-weight;
	line-height: $form-label-line-height;
	margin-bottom: rem($form-label-bottom-margin);
	&.right {
		float: none;
		text-align: right;
	}
	&.inline { 
		margin: rem(0 0 $form-spacing 0);
		padding: rem($form-spacing / 2 + $input-border-width 0);
	}
	/* Styles for required inputs */
	small {
		text-transform: $form-label-small-transform;
		color: scale-color($form-label-font-color, $lightness: 15%);
	}
}

select::-ms-expand {
	display:none;
}

@-moz-document url-prefix() {
	select { background: $select-bg-color; }
	select:hover { background: $select-hover-bg-color }
}

// @MIXIN
//
// We use this mixin to create prefix label styles
// $bg - Default:$input-prefix-bg || scale-color(#fff, $lightness: -5%) !default;
// $is-button - Toggle position settings if prefix is a button. Default:false
//
@mixin prefix($bg:$input-prefix-bg, $border:$input-prefix-border-color, $is-button:false) {

	@if $bg {
		$bg-lightness: lightness($bg);
		background: $bg;
		border-#{$opposite-direction}: none;

		// Control the font color based on background brightness
		@if $bg-lightness > 70% or $bg == yellow { color: $input-prefix-font-color; }
		@else { color: $input-prefix-font-color-alt; }
	}

	@if $border {
		border-color: $border;
	}

	@if $is-button {
		@include border-right-radius(0px);
		text-align: center;
	}

}
//
// We use this mixin to create postfix label styles
// $bg - Default:$input-prefix-bg || scale-color(#fff, $lightness: -5%) !default;
// $is-button - Toggle position settings if prefix is a button. Default: false
@mixin postfix($bg:$input-prefix-bg, $border:$input-prefix-border-color, $is-button:false) {

	@if $bg {
		$bg-lightness: lightness($bg);
		background: $bg;
		border-#{$default-float}: none;

		// Control the font color based on background brightness
		@if $bg-lightness > 70%  or $bg == yellow { color: $input-prefix-font-color; }
		@else { color: $input-prefix-font-color-alt; }
	}

	@if $border {
		border-color: $border;
	}
	@if $is-button {
		@include border-left-radius(0px);
		text-align: center;
	}
}
/* Attach elements to the beginning or end of an input */
.prefix,
.postfix { 
	display: block;
	position: relative;
	z-index: 2;
	text-align: center;
	width: 100%;
	padding: rem(($input-font-size + ($form-spacing * 1.5) - 1 - $form-label-font-size) / 2 - $input-prefix-border-size);
	border-style: $input-prefix-border-type;
	border-width: $input-prefix-border-size;
	overflow: $input-prefix-overflow;
	font-size: $form-label-font-size;
	height: rem($input-font-size + ($form-spacing * 1.5) - 1);
	line-height: 1;
}

/* Adjust padding, alignment and radius if pre/post element is a button */
.postfix.button { @include button-size($height:($input-font-size + ($form-spacing * 1.5) - 1), $font-size: $form-label-font-size, $padding: 0 ); @include postfix(false, false, true); }
.prefix.button { @include button-size($height:($input-font-size + ($form-spacing * 1.5) - 1), $font-size: $form-label-font-size, $padding: 0); @include prefix(false, false, true); }


/* Separate prefix and postfix styles when on span or label so buttons keep their own */
span.prefix,label.prefix {
	@include prefix();
	&.radius {
		@include border-radius(0);
		@if $default-float == left {
			@include border-left-radius($global-radius);
		} @else {
			@include border-right-radius($global-radius);
		}
	}
}
span.postfix,label.postfix {
	@include postfix();
	&.radius {
		@include border-radius(0);
		@if $opposite-direction == left {
			@include border-left-radius($global-radius);
		} @else {
			@include border-right-radius($global-radius);
		}
	}
}

/* We use this to get basic styling on all basic form elements */
input[type="text"],
input[type="password"],
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="month"],
input[type="week"],
input[type="email"],
input[type="number"],
input[type="search"],
input[type="tel"],
input[type="time"],
input[type="url"],
textarea,
[contentEditable]{
	-webkit-appearance: none;
	background-color: $input-bg-color;
	font-family: $input-font-family;
	border: $input-border-width $input-border-style $input-border-color;
	box-shadow: $input-box-shadow;
	color: $input-font-color;
	display: block;
	font-size: rem($input-font-size);
	margin: rem(0 0 $form-spacing 0);
	padding: rem($form-spacing / 2);
	line-height: 1;
	height: rem($input-font-size + ($form-spacing * 1.5) - 1);
	width: 100%;
	@if $input-include-glowing-effect {
		@include block-glowing-effect(focus, $glowing-effect-fade-time, $glowing-effect-color);
	}
	// Basic focus styles
	&:focus {
		background: $input-focus-bg-color;
		border-color: $input-focus-border-color;
		outline: none;
	}

	// Disabled background input background color
	&[disabled], fieldset[disabled] & { background-color: $input-disabled-bg; }
	// why did they do this?
	@if $input-include-glowing-effect == false {
		@include single-transition(all, 0.15s, linear);
	}
	&.radius {
		@include border-radius($global-radius);
	}
}

input[type="submit"] {
	-webkit-appearance: none;
}

/* Respect enforced amount of rows for textarea */
textarea, [contentEditable] {
	height: auto;
}

/* Add height value for select elements to match text input height */
select {
	-webkit-appearance: none !important;
	width: 100%;
	background-color: $select-bg-color;
	background-image: url('data:image/svg+xml;base64, PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZlcnNpb249IjEuMSIgeD0iMHB4IiB5PSIwcHgiIHdpZHRoPSI2cHgiIGhlaWdodD0iM3B4IiB2aWV3Qm94PSIwIDAgNiAzIiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IDAgMCA2IDMiIHhtbDpzcGFjZT0icHJlc2VydmUiPjxwb2x5Z29uIHBvaW50cz0iNS45OTIsMCAyLjk5MiwzIC0wLjAwOCwwICIvPjwvc3ZnPg==');
	background-repeat: no-repeat;
	background-position: 97% center;
	border: $input-border-width $input-border-style $input-border-color;
	padding: rem($form-spacing / 2);
	font-size: rem($input-font-size);
	@include border-radius($input-border-radius);
	&.radius { @include border-radius($global-radius); }
	&:hover {
		background-color: $select-hover-bg-color;
		border-color: $input-focus-border-color;
	}
	height: rem($input-font-size + ($form-spacing * 1.5) - 1);
}

/* Adjust margin for form elements below */
input[type="file"],
input[type="checkbox"],
input[type="radio"],
select {
	margin: 0 0 $form-spacing 0;
}

input[type="checkbox"] + label,
input[type="radio"] + label {
	display: inline-block;
	margin-#{$default-float}: $form-spacing * .5;
	margin-#{$opposite-direction}: $form-spacing;
	margin-bottom: 0;
	vertical-align: baseline;
}

/* Normalize file input width */
input[type="file"] {
	width:100%;
}

/* We add basic fieldset styling */
fieldset {
	border: $fieldset-border-width $fieldset-border-style $fieldset-border-color;
	padding: $fieldset-padding;
	margin: $fieldset-margin;

	// and legend styles
	legend {
		font-weight: $legend-font-weight;
		background: $legend-bg;
		padding: rem($legend-padding);
		margin: 0;
		margin-#{$default-float}: rem(-3);
	}
}

/* Error Handling */

.error small.error, span.error, small.error {
	@include form-error-message;
}
span.error, small.error { display: none; }

span.error, small.error {
	@include form-error-message;
}

.error {
	input,
	textarea,
	select {
		margin-bottom: 0;
	}

	input[type="checkbox"],
	input[type="radio"] {
		margin-bottom: $form-spacing
	}

	label,
	label.error {
		@include form-label-error-color;
	}

	small.error {
		@include form-error-message;
	}

	> label {
		> small {
			color: scale-color($form-label-font-color, $lightness: 15%);
			background: transparent;
			padding: 0;
			text-transform: $form-label-small-transform;
			font-style: normal;
			font-size: 60%;
			margin: 0;
			display: inline;
		}
	}

	span.error-message {
		display: block;
	}
}

input.error,
textarea.error {
	margin-bottom: 0;
}
label.error { @include form-label-error-color; }
