//
// Base Variables
//

$default-float: left !default;
$opposite-direction: right !default;
$global-radius: 0px !default;
$make-image-inline-block: false !default;

// Base Color Variables

$color-body-background: #fff !default;

$color-main-1: #222 !default;
$color-message: #333 !default;
$color-error: #c90000 !default;
$color-success: #628b1c !default;

//
// Base Type Variables
//

// This needs to be a px value since rem-calc and em-calc use it.
$base-font-size: 16px !default;

$base-line-height: 1 !default;

$body-font-color: #222 !default;
$body-font-family: "Times New Roman", sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

$font-smoothing: subpixel-antialiased !default;

//
// Base Functions
//


//
// Media Queries
//

$small-range: (rem-calc(0), rem-calc(639)) !default;
$medium-range: (rem-calc(640), rem-calc(1023)) !default;
$large-range: (rem-calc(1024), rem-calc(1439)) !default;
$xlarge-range: (rem-calc(1440), rem-calc(1920)) !default;
$xxlarge-range: (rem-calc(1921), 999999em) !default;

$screen: "only screen" !default;

$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})" !default;
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})" !default;

$screen: "only screen" !default;
$small-only: "only screen and (min-width: #{nth($small-range, 1)}) and (max-width: #{nth($small-range, 2)})" !default;
$small-up: "only screen and (min-width: #{nth($small-range, 1)})" !default;
$medium-only: "only screen and (min-width: #{nth($medium-range, 1)}) and (max-width: #{nth($medium-range, 2)})" !default;
$medium-up: "only screen and (min-width: #{nth($medium-range, 1)})" !default;
$medium-down: "only screen and (max-width: #{nth($medium-range, 2)})" !default;
$large-only: "only screen and (min-width: #{nth($large-range, 1)}) and (max-width: #{nth($large-range, 2)})" !default;
$large-up: "only screen and (min-width: #{nth($large-range, 1)})" !default;
$large-down: "only screen and (max-width: #{nth($large-range, 2)})" !default;
//$xlarge-only: "only screen and (min-width: #{lower-bound($xlarge-range)})" !default;
$xlarge-up: "only screen and (min-width: #{nth($xlarge-range, 1)})" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;

*,
*:before,
*:after {
	@include box-sizing(border-box);
}

html,
body { font-size: $base-font-size; }

// Default body styles
body {
	background: $color-body-background;
	color: $body-font-color;
	padding: 0;
	margin: 0;
	font-family: $body-font-family;
	font-weight: $body-font-weight;
	font-style: $body-font-style;
	line-height: $base-line-height; // Set to $base-line-height to take on browser default of 150%
	position: relative;
}

// Override outline from normalize, we don't like it
a:focus { outline: none; }

// Grid Defaults to get images and embeds to work properly
img,
object,
embed { max-width: 100%; height: auto; }

object,
embed { height: 100%; }
img { -ms-interpolation-mode: bicubic; }

@if $make-image-inline-block {
	// Get rid of gap under images by making them display: inline-block; by default
	img {
		display:inline-block;
		vertical-align: middle;
	}
}

#map_canvas,
.map_canvas {
	img,
	embed,
	object { max-width: none !important; }
}

// Miscellaneous useful HTML classes
.clear-both	{ clear: both !important; }
.clear-left	{ clear: left !important; }
.clear-right	{ clear: right !important; }
.float-left	{ float: left !important; }
.float-right	{ float: right !important; }
.text-left	{ text-align: left !important; }
.text-right	{ text-align: right !important; }
.text-center	{ text-align: center !important; }
.text-justify	{ text-align: justify !important; }
.hide   { display: none; }//hide
.no-margin	{ margin: 0 !important; }

// Classes for help with CSS3 animation

[data-dynamic-height], [data-dynamic-width]	{ overflow: hidden; }
.min		{ height: 0 !important; }
